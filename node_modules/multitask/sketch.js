
/*
multitask
----------------
x bluebird

demo app
----------------
emitter
keen-js
multitask
node-cron
superagent
superagent-bluebird-promise
superagent-prefix

*/

/*
tasks {}
.set(name, [deps,] fn || null)
.run([name])
.get([name])
.then()

.on
.off
.once
.emit
*/

Emitter.on('pageviews > 10000', function(msg){
  // send an email
  // send a text message
  // post to a slack channel
});

var async = require('async'),
emitter = require('emitter'),
Keen = require('keen-js');

var env = process.env.NODE_ENV || 'development';
var config = require('./config')[env];

var client = new Keen(config.keen);

multitask.set('pageviews', function(done){
  request
  .post('/queries/count')
  .send({
    event_collection: 'pageviews'
  })
  .set('Content-Type', 'application/json')
  .set('Authorization', client.readKey())
  .use(prefix(client.url()))
  .promise()
  .then(function(res){
    if (res.body.result > 10000) Emitter.emit('pageviews > 10000');
  })
  .then(renderImageCharts('./tmp', 'png'))
  .then(done)
  .catch(lmk);
});

multitask.set('total-signups', function(done){
  // run query
  done(null, { result: 829855 });
});
multitask.set('total-purchases', function(done){
  // run query
  done(null, { result: 34912.34 });
});

multitask.set('revenue', ['total-signups', 'total-purchases'], function(err, res, done){
  if (err) throw 'Oops lol';
  // if [dependent tasks]: `err, res` args can be used, else: use #get method
  var signups = res ? res[0] : multitask.get('total-signups'),
  purchases = res ? res[1] : multitask.get('total-purchases');
  // `done` is always the last argument
  done(null, { result: signups.result / purchases.result });
});


multitask.set('daily report', ['revenue', 'pageviews'], function(err, res, done){
  // if (err) deal with it;
  sendReport(res)
  .then(done)
  .catch(lmk);
});

// async.map(['task1','task2','task3'], multitask.run, function(err, res){ });

// multitask.at('07:00:00').every('day').run('daily report');

cron.at('07:00:00', function(){
  tasks
  .run(['daily report', 'another report', 'last report'])
  .then(function(){})
  .catch(lmk);
});
